{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport productRequest from './api/productApi';\nimport categoryRequest from './api/categoryApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]); // list product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await productRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await productRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Cập nhật Products\n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await productRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; // list cate\n\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryRequest.getAllCate();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Xóa cate\n\n  const onHandleRemoveCate = async id => {\n    try {\n      const {\n        data\n      } = await categoryRequest.removeCate(id);\n      const newCategory = categories.filter(category => category.id !== id);\n      setCategories(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Add cate\n\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await categoryRequest.createCate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Edit cate\n\n\n  const onHandleUpdateCate = async updateCate => {\n    const newCategory = categories.map(Categories => Categories.id === updateCate.id ? updateCate : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await categoryRequest.updateCate(updateCate.id, updateCate);\n    setCategories(newCategory);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    categories: categories,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    onRemoveCate: onHandleRemoveCate,\n    onAddCate: onHandleAddCate,\n    onUpdateCate: onHandleUpdateCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-basic-master/src/App.js"],"names":["React","useState","useEffect","Routers","productRequest","categoryRequest","App","products","setProducts","categories","setCategories","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","onHandleAdd","create","onHandleUpdate","updateProducts","map","Products","update","getCategories","getAllCate","onHandleRemoveCate","removeCate","newCategory","category","onHandleAddCate","createCate","onHandleUpdateCate","updateCate","Categories"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers'\nimport productRequest from './api/productApi'\nimport categoryRequest from './api/categoryApi'\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  // list product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await productRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await productRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await productRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Cập nhật Products\n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await productRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n  // list cate\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await categoryRequest.getAllCate();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // Xóa cate\n  const onHandleRemoveCate = async (id) => {\n    try {\n      const { data } = await categoryRequest.removeCate(id);\n      const newCategory = categories.filter((category) => category.id !== id);\n      setCategories(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Add cate\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await categoryRequest.createCate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Edit cate\n  const onHandleUpdateCate = async (updateCate) => {\n    const newCategory = categories.map(\n      (Categories) =>\n        Categories.id === updateCate.id ? updateCate : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await categoryRequest.updateCate(updateCate.id, updateCate);\n    setCategories(newCategory);\n  };\n  return (\n    <div className=\"App\">\n      <Routers\n        products={products}\n        categories={categories}\n        onRemove={onHandleRemove}\n        onAdd={onHandleAdd}\n        onUpdate={onHandleUpdate}\n        onRemoveCate={onHandleRemoveCate}\n        onAddCate={onHandleAddCate}\n        onUpdateCate={onHandleUpdateCate}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}