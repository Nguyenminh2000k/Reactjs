{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport dataFake from './dataFake';\nimport Routers from './routers';\nimport { Router } from 'react-router-dom';\n\nfunction App() {\n  const [products, setProducts] = useState([]); // list product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleRemove = id => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  };\n\n  const onHandleAdd = product => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    };\n    setProducts([...products, newProduct]);\n  };\n\n  const onHandleUpdate = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', newProducts);\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-basic-master/src/App.js"],"names":["React","useState","useEffect","dataFake","Routers","Router","App","products","setProducts","getProducts","data","apiRequest","getAll","error","console","log","onHandleRemove","id","newProducts","filter","product","onHandleAdd","newProduct","length","onHandleUpdate","updateProduct","map","localStorage","setItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAFa,CAGb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMC,UAAU,CAACC,MAAX,EAAvB;AACAJ,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAJ,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMO,cAAc,GAAIC,EAAD,IAAQ;AAC7B,UAAMC,WAAW,GAAGX,QAAQ,CAACY,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAA1C,CAApB;AACAT,IAAAA,WAAW,CAACU,WAAD,CAAX;AACD,GAHD;;AAIA,QAAMG,WAAW,GAAID,OAAD,IAAa;AAC/B,UAAME,UAAU,GAAG;AACjBL,MAAAA,EAAE,EAAEV,QAAQ,CAACgB,MAAT,GAAkB,CADL;AAEjB,SAAGH;AAFc,KAAnB;AAIAZ,IAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVe,UAFU,CAAD,CAAX;AAID,GATD;;AAWA,QAAME,cAAc,GAAIC,aAAD,IAAmB;AACxC,UAAMP,WAAW,GAAGX,QAAQ,CAACmB,GAAT,CAAaN,OAAO,IACtCA,OAAO,CAACH,EAAR,KAAeQ,aAAa,CAACR,EAA7B,GAAkCQ,aAAlC,GAAkDL,OADZ,CACqB;AADzC,KAApB;AAGAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCV,WAAjC;AACAV,IAAAA,WAAW,CAACU,WAAD,CAAX;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEX,QAAnB;AAA6B,IAAA,QAAQ,EAAES,cAAvC;AAAuD,IAAA,KAAK,EAAEK,WAA9D;AAA2E,IAAA,QAAQ,EAAEG,cAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD;;AACD,eAAelB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport dataFake from './dataFake';\nimport Routers from './routers'\nimport { Router } from 'react-router-dom';\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  // list product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n\n  const onHandleRemove = (id) => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  }\n  const onHandleAdd = (product) => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    }\n    setProducts([\n      ...products,\n      newProduct\n    ])\n  }\n\n  const onHandleUpdate = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', newProducts)\n    setProducts(newProducts);\n  }\n  return (\n    <div className=\"App\">\n      <Routers products={products} onRemove={onHandleRemove} onAdd={onHandleAdd} onUpdate={onHandleUpdate} />\n\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}