{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\pages\\\\views\\\\Admin\\\\Blog\\\\AddPost.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport Swal from 'sweetalert2';\nimport firebase from '../../../../firebase';\n\nconst AddPost = ({\n  onAddPost\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let history = useHistory();\n  const d = new Date();\n  const n = d.toISOString();\n  console.log(d);\n\n  const onSubmit = data => {\n    // Swal.fire(\n    //     'Created!',\n    //     'Your file has been created.',\n    //     'success'\n    // )\n    let file = data.image_post[0];\n    let storageRef = firebase.storage().ref(`image_post/${file.name}`);\n    storageRef.put(file).then(function () {\n      storageRef.getDownloadURL().then(url => {\n        console.log(url);\n        const newData = { ...data,\n          image_post: url\n        };\n        console.log(newData);\n        onAddPost(newData);\n        history.push(\"/admin/posts\");\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Th\\xEAm b\\xE0i vi\\u1EBFt\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1 b\\xE0i vi\\u1EBFt\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"form-control\",\n    id: \"inputProductName\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 42\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1 b\\xE0i vi\\u1EBFt kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"\\u1EA2nh b\\xE0i vi\\u1EBFt\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"inputGroupFile02\",\n    name: \"image_post\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"inputGroupFile02\",\n    \"aria-describedby\": \"imageHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Choose image\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"M\\xF4 t\\u1EA3 b\\xE0i vi\\u1EBFt\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"short_desc\",\n    className: \"form-control\",\n    id: \"inputProductName\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), errors.short_desc && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 47\n    }\n  }, \"N\\u1ED9i dung b\\xE0i vi\\u1EBFt kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"N\\u1ED9i dung b\\xE0i vi\\u1EBFt\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"desc_post\",\n    className: \"form-control\",\n    id: \"inputProductName\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), errors.desc_post && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 46\n    }\n  }, \"N\\u1ED9i dung b\\xE0i vi\\u1EBFt kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"date\",\n    className: \"form-control\",\n    value: d.tolSOString(),\n    ref: register(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit(onSubmit),\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nAddPost.propTypes = {};\nexport default AddPost;","map":{"version":3,"sources":["D:/react-basic-master/src/pages/views/Admin/Blog/AddPost.js"],"names":["React","PropTypes","useHistory","useForm","Swal","firebase","AddPost","onAddPost","register","handleSubmit","errors","history","d","Date","n","toISOString","console","log","onSubmit","data","file","image_post","storageRef","storage","ref","name","put","then","getDownloadURL","url","newData","push","required","title","color","short_desc","desc_post","tolSOString","propTypes"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\nimport firebase from '../../../../firebase'\r\n\r\nconst AddPost = ({ onAddPost }) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    let history = useHistory();\r\n    const d = new Date();\r\n    const n = d.toISOString();\r\n    console.log(d);\r\n    const onSubmit = (data) => {\r\n        // Swal.fire(\r\n        //     'Created!',\r\n        //     'Your file has been created.',\r\n        //     'success'\r\n        // )\r\n        let file = data.image_post[0];\r\n        let storageRef = firebase.storage().ref(`image_post/${file.name}`);\r\n        storageRef.put(file).then(function () {\r\n            storageRef.getDownloadURL().then((url) => {\r\n                console.log(url);\r\n\r\n                const newData = {\r\n                    ...data,\r\n                    image_post: url\r\n                };\r\n                console.log(newData);\r\n                onAddPost(newData);\r\n                history.push(\"/admin/posts\");\r\n            })\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <section class=\"content\">\r\n                <h3 className=\"card-title\">Thêm bài viết</h3>\r\n                <form >\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Tiêu đề bài viết</label>\r\n                        <input type=\"text\"\r\n                            name=\"title\"\r\n                            className=\"form-control\"\r\n                            id=\"inputProductName\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            ref={register({ required: true })} />\r\n                        {errors.title && <span style={{ color: \"red\" }}>Tiêu đề bài viết không được để trống</span>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"productPrice\">Ảnh bài viết</label>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"custom-file\">\r\n                                <input type=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                    id=\"inputGroupFile02\"\r\n                                    name=\"image_post\"\r\n                                    ref={register}\r\n                                />\r\n                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\" aria-describedby=\"imageHelp\">Choose image</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Mô tả bài viết</label>\r\n                        <input type=\"text\"\r\n                            name=\"short_desc\"\r\n                            className=\"form-control\"\r\n                            id=\"inputProductName\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            ref={register({ required: true })} />\r\n                        {errors.short_desc && <span style={{ color: \"red\" }}>Nội dung bài viết không được để trống</span>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Nội dung bài viết</label>\r\n                        <input type=\"text\"\r\n                            name=\"desc_post\"\r\n                            className=\"form-control\"\r\n                            id=\"inputProductName\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            ref={register({ required: true })} />\r\n                        {errors.desc_post && <span style={{ color: \"red\" }}>Nội dung bài viết không được để trống</span>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"hidden\"\r\n                            name=\"date\"\r\n                            className=\"form-control\"\r\n                            value={d.tolSOString()}\r\n                            ref={register()} />\r\n                    </div>\r\n                    <button onClick={handleSubmit(onSubmit)} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddPost.propTypes = {\r\n\r\n}\r\n\r\nexport default AddPost\r\n"]},"metadata":{},"sourceType":"module"}