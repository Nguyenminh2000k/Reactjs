{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport productRequest from './api/productApi';\nimport categoryRequest from './api/categoryApi';\nimport postRequest from './api/postApi';\nimport contactRequest from './api/contactApi';\nimport contactApi from './api/contactApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [contacts, setContacts] = useState([]); // list product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await productRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await productRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Cập nhật Products\n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await productRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; // list cate\n\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryRequest.getAllCate();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Xóa cate\n\n  const onHandleRemoveCate = async id => {\n    try {\n      const {\n        data\n      } = await categoryRequest.removeCate(id);\n      const newCategory = categories.filter(category => category.id !== id);\n      setCategories(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Add cate\n\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await categoryRequest.createCate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Edit cate\n\n\n  const onHandleUpdateCate = async updateCate => {\n    const newCategory = categories.map(Categories => Categories.id === updateCate.id ? updateCate : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await categoryRequest.updateCate(updateCate.id, updateCate);\n    setCategories(newCategory);\n  }; // list posts\n\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {\n          data\n        } = await postRequest.getAllPost();\n        setPosts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getPosts();\n  }, []); // Add post\n\n  const onHandleAddPost = async post => {\n    try {\n      const {\n        data\n      } = await postRequest.createPost(post);\n      setPosts([...posts, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Xoa post\n\n\n  const onHandleRemovePost = async id => {\n    try {\n      const {\n        data\n      } = await postRequest.removePost(id);\n      const newPost = posts.filter(post => post.id !== id);\n      setPosts(newPost);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // edit post\n\n\n  const onHandleUpdatePost = async updatePost => {\n    const newPost = posts.map(Posts => Posts.id === Posts.id ? updatePost : Posts // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await postRequest.updatePost(updatePost.id, updatePost);\n    setPosts(newPost);\n  };\n\n  useEffect(() => {\n    const getContact = async () => {\n      try {\n        const {\n          data\n        } = await contactApi.getAllContact();\n        setContacts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getContact();\n  }, []);\n\n  const onHandleAddContact = async contact => {\n    try {\n      const {\n        data\n      } = await contactApi.createPost(contact);\n      setContacts([...contacts, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    categories: categories,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    onRemoveCate: onHandleRemoveCate,\n    onAddCate: onHandleAddCate,\n    onUpdateCate: onHandleUpdateCate,\n    posts: posts,\n    onAddPost: onHandleAddPost,\n    onRemovePost: onHandleRemovePost,\n    onUpdatePost: onHandleUpdatePost,\n    contacts: contacts,\n    onAddContact: onHandleAddContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-basic-master/src/App.js"],"names":["React","useState","useEffect","Routers","productRequest","categoryRequest","postRequest","contactRequest","contactApi","App","products","setProducts","categories","setCategories","posts","setPosts","contacts","setContacts","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","onHandleAdd","create","onHandleUpdate","updateProducts","map","Products","update","getCategories","getAllCate","onHandleRemoveCate","removeCate","newCategory","category","onHandleAddCate","createCate","onHandleUpdateCate","updateCate","Categories","getPosts","getAllPost","onHandleAddPost","post","createPost","onHandleRemovePost","removePost","newPost","onHandleUpdatePost","updatePost","Posts","getContact","getAllContact","onHandleAddContact","contact"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers'\nimport productRequest from './api/productApi'\nimport categoryRequest from './api/categoryApi'\nimport postRequest from './api/postApi'\nimport contactRequest from './api/contactApi'\nimport contactApi from './api/contactApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  // list product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await productRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await productRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await productRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Cập nhật Products\n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await productRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n  // list cate\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await categoryRequest.getAllCate();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // Xóa cate\n  const onHandleRemoveCate = async (id) => {\n    try {\n      const { data } = await categoryRequest.removeCate(id);\n      const newCategory = categories.filter((category) => category.id !== id);\n      setCategories(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Add cate\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await categoryRequest.createCate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Edit cate\n  const onHandleUpdateCate = async (updateCate) => {\n    const newCategory = categories.map(\n      (Categories) =>\n        Categories.id === updateCate.id ? updateCate : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await categoryRequest.updateCate(updateCate.id, updateCate);\n    setCategories(newCategory);\n  };\n  // list posts\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const { data } = await postRequest.getAllPost();\n        setPosts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getPosts();\n  }, []);\n  // Add post\n  const onHandleAddPost = async (post) => {\n    try {\n      const { data } = await postRequest.createPost(post);\n      setPosts([...posts, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Xoa post\n  const onHandleRemovePost = async (id) => {\n    try {\n      const { data } = await postRequest.removePost(id);\n      const newPost = posts.filter((post) => post.id !== id);\n      setPosts(newPost);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // edit post\n  const onHandleUpdatePost = async (updatePost) => {\n    const newPost = posts.map(\n      (Posts) =>\n        Posts.id === Posts.id ? updatePost : Posts // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await postRequest.updatePost(updatePost.id, updatePost);\n    setPosts(newPost);\n  };\n  useEffect(() => {\n    const getContact = async () => {\n      try {\n        const { data } = await contactApi.getAllContact();\n        setContacts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getContact();\n  }, []);\n  const onHandleAddContact = async (contact) => {\n    try {\n      const { data } = await contactApi.createPost(contact);\n      setContacts([...contacts, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <Routers\n        products={products}\n        categories={categories}\n        onRemove={onHandleRemove}\n        onAdd={onHandleAdd}\n        onUpdate={onHandleUpdate}\n        onRemoveCate={onHandleRemoveCate}\n        onAddCate={onHandleAddCate}\n        onUpdateCate={onHandleUpdateCate}\n        posts={posts}\n        onAddPost={onHandleAddPost}\n        onRemovePost={onHandleRemovePost}\n        onUpdatePost={onHandleUpdatePost}\n        contacts={contacts}\n        onAddContact={onHandleAddContact}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}